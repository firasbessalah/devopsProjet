pipeline {
    agent any

    environment {
        DOCKER_HOST_IP = "192.168.246.131"
    }

    stages {
        stage('Compile') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('Install') {
            steps {
                sh 'mvn clean install -Dmaven.test.skip=true'
            }
        }

        stage('Build Docker Images') {
            steps {
                sh 'docker compose build --no-cache'
            }
        }

        stage('Login to Docker Hub') {
            steps {
                sh 'docker logout'
                withCredentials([usernamePassword(
                    credentialsId: 'DOCKER_HUB_CREDENTIALS',
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_PASSWORD'
                )]) {
                    sh '''
                        echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USER}" --password-stdin
                    '''
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                sh 'docker compose push'
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                sh '''
                    docker compose down || true
                    docker compose up -d
                '''
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    waitUntil {
                        try {
                            def status = sh(
                                script: "curl -s -o /dev/null -w '%{http_code}' http://${DOCKER_HOST_IP}:8089/kaddem/actuator/health",
                                returnStdout: true
                            ).trim()
                            return (status == "200")
                        } catch (Exception e) {
                            sleep(10)
                            return false
                        }
                    }
                    echo "Application is up and running!"
                    
                    // Test final
                    sh """
                        echo "Testing endpoint..."
                        curl -v http://${DOCKER_HOST_IP}:8089/kaddem
                        curl -v http://${DOCKER_HOST_IP}:8089/kaddem/actuator/health
                        curl -v http://${DOCKER_HOST_IP}:8089/h2-console
                    """
                }
            }
        }
    }

    post {
        always {
            sh 'docker logout'
        }
        failure {
            slackSend channel: '#builds',
                     color: 'danger',
                     message: "Build Failed: ${env.JOB_NAME} ${env.BUILD_NUMBER}"
        }
        success {
            slackSend channel: '#builds',
                     color: 'good',
                     message: "Build Success: ${env.JOB_NAME} ${env.BUILD_NUMBER}"
        }
    }
}
